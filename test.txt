// r := mux.NewRouter()
// api := r.PathPrefix("/api/v1").Subrouter()
// api.HandleFunc("", get).Methods(http.MethodGet)
// api.HandleFunc("", post).Methods(http.MethodPost)
// api.HandleFunc("", put).Methods(http.MethodPut)
// api.HandleFunc("", delete).Methods(http.MethodDelete)

// api.HandleFunc("/user/{userID}/comment/{commentID}", params).Methods(http.MethodGet)

// fmt.Println("Welcome to notification service")
// log.Fatal(http.ListenAndServe(":8080", r))



// func get(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 	w.WriteHeader(http.StatusOK)
// 	w.Write([]byte(`{ "message": "GET method called" }`))
// }
// func post(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 	w.WriteHeader(http.StatusCreated)
// 	w.Write([]byte(`{ "message": "POST method called" }`))
// }
// func put(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 	w.WriteHeader(http.StatusAccepted)
// 	w.Write([]byte(`{ "message": "PUT method called" }`))
// }
// func delete(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 	w.WriteHeader(http.StatusOK)
// 	w.Write([]byte(`{ "message": "DELETE method called" }`))
// }
// func notfound(w http.ResponseWriter, r *http.Request) {
// 	w.Header().Set("Content-Type", "application/json")
// 	w.WriteHeader(http.StatusNotFound)
// 	w.Write([]byte(`{ "message": "Not Found" }`))
// }
